
extensions [ time ]

to create-file
  
  let number-of-values 62
  set output-values array:from-list n-values number-of-values [0]
  
  if no-output != "YES" [ 
    
    let cur-date time:create "now"
    
    let year   time:get "year"   cur-date
    let month  time:get "month"  cur-date
    let day    time:get "day"    cur-date
    let hour   time:get "hour"   cur-date
    let minute time:get "minute" cur-date
    let second time:get "second" cur-date
    
    if month  < 10 [ set month  word "0" month  ]
    if day    < 10 [ set day    word "0" day    ]
    if hour   < 10 [ set hour   word "0" hour   ]
    if minute < 10 [ set minute word "0" minute ]
    if second < 10 [ set second word "0" second ]
    
    set output-file-name ( word "../output/" year "-" month "-" day " " hour "_" minute "_" second " [" behaviorspace-run-number "] output.csv" )
    let config-output-file-name ( word "../output/" year "-" month "-" day " " hour "_" minute "_" second " [" behaviorspace-run-number "] config-output.csv" )
    
    file-open config-output-file-name
    
    write-configs-to-file
    
    file-close
    
    file-open output-file-name
    
    write-headers-to-file
    
    file-close
    
  ]
  
end

to write-configs-to-file
    
  file-print ( word "model-version" " " model-version )
  
  file-print ( word "seed" " " behaviorspace-run-number )
  
  file-print ( word "max-years" " " max-years )
  
  file-print ( word "ticks-per-day" " " ticks-per-day )
  
  file-print ( word "tree-width" " " tree-width )
  file-print ( word "tree-radius" " " tree-radius )
  file-print ( word "tree-margin-x" " " tree-margin-x )
  file-print ( word "tree-margin-y" " " tree-margin-y )
  file-print ( word "border-margin" " " border-margin )
  file-print ( word "trees-per-row" " " trees-per-row )
  file-print ( word "tree-rows" " " tree-rows )
  
  file-print ( word "wildberry-plant-width" " " wildberry-plant-width )
  file-print ( word "wildberry-plant-margin" " " wildberry-plant-margin )
  file-print ( word "wildberries-per-plant" " " wildberries-per-plant )
  
  file-print ( word "visibility" " " visibility )
  file-print ( word "eggs-per-cycle" " " eggs-per-cycle )
  file-print ( word "egg-dev-duration" " " egg-dev-duration )
  
  file-print ( word "mortality-interval" " " mortality-interval )
  file-print ( word "mortality-off-season" " " mortality-off-season )
  file-print ( word "season-start-temp" " " season-start-temp )
  file-print ( word "season-end-temp" " " season-end-temp )
  
  file-print ( word "resistance-rate" " " resistance-rate )
  file-print ( word "fitness-PP" " " fitness-PP )
  file-print ( word "fitness-PR" " " fitness-PR )
  file-print ( word "fitness-RR" " " fitness-RR )
  file-print ( word "fitness-MM" " " fitness-MM )
  file-print ( word "fitness-MR" " " fitness-MR )
  file-print ( word "fitness-MP" " " fitness-MP )
  
  file-print ( word "init-pop" " " init-pop )
  file-print ( word "resistant-ratio" " " resistant-ratio )
  
  file-print ( word "gene-drive" " " gene-drive )
  file-print ( word "release-amount" " " release-amount )
  file-print ( word "release-day" " " release-day )
  
  file-print ( word "mean-cherries" " " mean-cherries )
  file-print ( word "sd-cherries" " " sd-cherries )
  file-print ( word "cherries-growth-start" " " cherries-growth-start )
  file-print ( word "cherries-growth-period"  " " cherries-growth-period )
   
end

to write-headers-to-file
    
  let headers [ "tick" ]                                      ; #0
  set headers lput "date" headers                             ; #1
  set headers lput "temperature" headers                      ; #2
  set headers lput "10d-mean-temperature" headers             ; #3
  set headers lput "season" headers                           ; #4
  set headers lput "season-number" headers                    ; #5
  set headers lput "max-cherries" headers                     ; #6
  set headers lput "grown-cherries" headers                   ; #7
  set headers lput "occupied-cherries" headers                ; #8
  set headers lput "grown-wildberries" headers                ; #9
  set headers lput "occupied-wildberries" headers             ; #10
  set headers lput "stationary-flies" headers                 ; #11
  set headers lput "adult-flies" headers                      ; #12
  set headers lput "female-flies" headers                     ; #13
  set headers lput "female-flies-partner-search" headers      ; #14
  set headers lput "female-flies-with-eggs" headers           ; #15
  set headers lput "male-flies" headers                       ; #16
  set headers lput "genotype-++" headers                      ; #17
  set headers lput "genotype-++-stationary" headers           ; #18
  set headers lput "genotype-++-adult" headers                ; #19
  set headers lput "genotype-R+" headers                      ; #20
  set headers lput "genotype-R+-stationary" headers           ; #21
  set headers lput "genotype-R+-adult" headers                ; #22
  set headers lput "genotype-RR" headers                      ; #23
  set headers lput "genotype-RR-stationary" headers           ; #24
  set headers lput "genotype-RR-adult" headers                ; #25
  set headers lput "genotype-MM" headers                      ; #26
  set headers lput "genotype-MM-stationary" headers           ; #27
  set headers lput "genotype-MM-adult" headers                ; #28
  set headers lput "genotype-M+" headers                      ; #29
  set headers lput "genotype-M+-stationary" headers           ; #30
  set headers lput "genotype-M+-adult" headers                ; #31
  set headers lput "genotype-MR" headers                      ; #32
  set headers lput "genotype-MR-stationary" headers           ; #33
  set headers lput "genotype-MR-adult" headers                ; #34
  set headers lput "oldest-fly" headers                       ; #35
  set headers lput "upgraded-flies" headers                   ; #36 => set in procedure upgrade-fly in flies.nls
  set headers lput "current-eggs-per-day" headers             ; #37 => set in procedure calculate-current-eggs-per-tick-rate in flies.nls
  set headers lput "current-eggs-per-tick" headers            ; #38 => set in procedure calculate-current-eggs-per-tick-rate in flies.nls
  set headers lput "eggs-layed" headers                       ; #39 => set in procedure fly-activities in flies.nls
  set headers lput "poisoned-eggs" headers                    ; #40 => set in procedure fly-activities in flies.nls
  set headers lput "current-female-statv-duration" headers    ; #41
  set headers lput "current-female-adult-longevity" headers   ; #42
  set headers lput "current-male-stat-duration" headers       ; #43
  set headers lput "current-male-adult-longevity" headers     ; #44
  set headers lput "stat-mortality-rate" headers              ; #45 => set in procedure kill-flies in flies.nls
  set headers lput "adult-mortality-rate" headers             ; #46 => set in procedure kill-flies in flies.nls
  set headers lput "killed-female-adult-longevity" headers    ; #47 => set in procedure kill-flies in flies.nls
  set headers lput "killed-male-adult-longevity" headers      ; #48 => set in procedure kill-flies in flies.nls
  set headers lput "killed-++-stat" headers                   ; #49 => set in procedure kill-flies in flies.nls
  set headers lput "killed-++-adult" headers                  ; #50 => set in procedure kill-flies in flies.nls
  set headers lput "killed-R+-stat" headers                   ; #51 => set in procedure kill-flies in flies.nls
  set headers lput "killed-R+-adult" headers                  ; #52 => set in procedure kill-flies in flies.nls
  set headers lput "killed-RR-stat" headers                   ; #53 => set in procedure kill-flies in flies.nls
  set headers lput "killed-RR-adult" headers                  ; #54 => set in procedure kill-flies in flies.nls
  set headers lput "killed-MM-stat" headers                   ; #55 => set in procedure kill-flies in flies.nls
  set headers lput "killed-MM-adult" headers                  ; #56 => set in procedure kill-flies in flies.nls
  set headers lput "killed-M+-stat" headers                   ; #57 => set in procedure kill-flies in flies.nls
  set headers lput "killed-M+-adult" headers                  ; #58 => set in procedure kill-flies in flies.nls
  set headers lput "killed-MR-stat" headers                   ; #59 => set in procedure kill-flies in flies.nls
  set headers lput "killed-MR-adult" headers                  ; #60 => set in procedure kill-flies in flies.nls
  
  while [ length headers > 0 ] [
    
    file-write first headers
    
    set headers but-first headers
    
  ]
  
  ; carriage-return
  file-print ""
  
end

to write-values-to-file
  
  if no-output != "YES" [ 
  
    let i 0
    
    array:set output-values 0 ticks
    array:set output-values 1 current-date
    array:set output-values 2 current-temp
    array:set output-values 3 mean-10d-temp
    array:set output-values 4 season
    array:set output-values 5 season-number
    array:set output-values 6 sum [ max-cherries ] of trees
    array:set output-values 7 sum [ grown-cherries ] of trees
    array:set output-values 8 sum [ occupied-cherries ] of trees
    array:set output-values 9 sum [ grown-wildberries ] of wildberry-plants
    array:set output-values 10 sum [ occupied-wildberries ] of wildberry-plants
    array:set output-values 11 count flies with [ mode = "stationary" ]
    array:set output-values 12 count flies with [ mode = "adult" ]
    array:set output-values 13 count flies with [ sex = "f" ]
    array:set output-values 14 count flies with [ sex = "f" and partner-search ]
    array:set output-values 15 count flies with [ eggs > 0 ]
    array:set output-values 16 count flies with [ sex = "m" ]
    array:set output-values 17 count flies with [ genotype = "++" ]
    array:set output-values 18 count flies with [ genotype = "++" and mode = "stationary" ]
    array:set output-values 19 count flies with [ genotype = "++" and mode = "adult" ]
    array:set output-values 20 count flies with [ genotype = "R+" or genotype = "+R" ]
    array:set output-values 21 count flies with [ genotype = "R+" or genotype = "+R" and mode = "stationary" ]
    array:set output-values 22 count flies with [ genotype = "R+" or genotype = "+R" and mode = "adult" ]
    array:set output-values 23 count flies with [ genotype = "RR" ]
    array:set output-values 24 count flies with [ genotype = "RR" and mode = "stationary" ]
    array:set output-values 25 count flies with [ genotype = "RR" and mode = "adult" ]
    array:set output-values 26 count flies with [ genotype = "MM" ]
    array:set output-values 27 count flies with [ genotype = "MM" and mode = "stationary" ]
    array:set output-values 28 count flies with [ genotype = "MM" and mode = "adult" ]
    array:set output-values 29 count flies with [ genotype = "M+" or genotype = "+M" ]
    array:set output-values 30 count flies with [ genotype = "M+" or genotype = "+M" and mode = "stationary" ]
    array:set output-values 31 count flies with [ genotype = "M+" or genotype = "+M" and mode = "adult" ]
    array:set output-values 32 count flies with [ genotype = "MR" or genotype = "RM" ]
    array:set output-values 33 count flies with [ genotype = "MR" or genotype = "RM" and mode = "stationary" ]
    array:set output-values 34 count flies with [ genotype = "MR" or genotype = "RM" and mode = "adult" ]
    ifelse count flies > 0 [
      array:set output-values 35 [ ceiling ( total-age / ticks-per-day ) ] of max-one-of flies [ total-age ]
    ] [
      array:set output-values 35 0
    ]
    ; 36-40 see procedures...
    array:set output-values 41 current-female-stat-duration
    array:set output-values 42 current-female-adult-longevity
    array:set output-values 43 current-male-stat-duration
    array:set output-values 44 current-male-adult-longevity
    ; 47-60 see procedures...
    
    file-open output-file-name
    
    while [ i < ( array:length output-values ) ] [
      
      file-write array:item output-values i
      
      set i ( i + 1 ) 
      
    ]
    
    ; carriage-return
    file-print ""
    
    file-close
    
    set output-values array:from-list n-values array:length output-values [0]
    
  ]
  
end